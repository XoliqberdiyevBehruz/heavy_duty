networks:
  heavy_duty:
    driver: bridge
  
volumes:
  pg_data: null
  pycache: null

services:
  nginx:
    networks:
      - heavy_duty
    ports:
      - ${PORT:-8001}:80
    volumes:
      - ./resources/layout/nginx.conf:/etc/nginx/nginx.conf
      - ./resources/:/usr/share/nginx/html/resources/
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    depends_on:
      - web

  web:
    networks:
      - heavy_duty
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.web
    restart: always
    command: ${COMMAND:-sh ./resources/scripts/entrypoint.sh}
    environment:
      - PYTHONPYCACHEPREFIX=/var/cache/pycache
    volumes:
      - './:/code'
      - pycache:/var/cache/pycache
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    networks:
      - heavy_duty
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    networks:
      - heavy_duty
    restart: always
    image: redis